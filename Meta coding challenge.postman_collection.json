{
	"info": {
		"_postman_id": "3552898b-c2dc-44d2-bc9d-135594747f7f",
		"name": "Meta coding challenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27875747"
	},
	"item": [
		{
			"name": "CheckEndpoint",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"hello\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/hello",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"hello"
					]
				}
			},
			"response": []
		},
		{
			"name": "All quotes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.test(\"Response time is less than 30 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(30000);\r",
							"});\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/quotes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"quotes"
					]
				}
			},
			"response": []
		},
		{
			"name": "All quotes Pageable",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.test(\"Response time is less than 30 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(30000);\r",
							"});\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/quotes/pageable?size=10&page=3&sort=quoteAuthor,ASC",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"quotes",
						"pageable"
					],
					"query": [
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "page",
							"value": "3"
						},
						{
							"key": "sort",
							"value": "quoteAuthor,ASC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "byId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.test(\"Response time is less than 10 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(10);\r",
							"});\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/quotes/5eb17aadb69dc744b4e70d5c",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"quotes",
						"5eb17aadb69dc744b4e70d5c"
					]
				}
			},
			"response": []
		},
		{
			"name": "byAuthor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.test(\"Response time is less than 50ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(50);\r",
							"});\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var itemsAvailable = \r",
							"[\r",
							"    \"Victor Hugo\",\r",
							"    \"Albert Camus\",\r",
							"    \"William Shakespeare\",\r",
							"    \"Francis Bacon\",\r",
							"    \"Lauren Bacall\",\r",
							"    \"Rabindranath Tagore\",\r",
							"    \"John Adams\"\r",
							"];\r",
							"\r",
							"var item = _.sample(itemsAvailable);\r",
							"\r",
							"console.log(\"Item Picked: \" + item);\r",
							"\r",
							"pm.environment.set(\"Author\", item);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/quotes/authors/{{Author}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"quotes",
						"authors",
						"{{Author}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Author",
			"value": "Vitor Hugo",
			"type": "string"
		}
	]
}